# Copyright (c) 2024 Atmosic
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build_overrides/chip.gni")
import("//build_overrides/zephyr.gni")

import("${chip_root}/src/platform/atmosic/atm34/args.gni")
import("${chip_root}/src/platform/device.gni")

assert(chip_device_platform == "atm34")

static_library("atm34") {
  sources = [
    "../../SingletonConfigurationManager.cpp",
    "../../Zephyr/BLEAdvertisingArbiter.cpp",
    "BLEAdvertisingArbiter.h",
    "BLEManagerImpl.cpp",
    "BLEManagerImpl.h",
    "BlePlatformConfig.h",
    "CHIPDevicePlatformConfig.h",
    "CHIPDevicePlatformEvent.h",
    "CHIPPlatformConfig.h",
    "../../Zephyr/ConfigurationManagerImpl.cpp",
    "ConfigurationManagerImpl.h",
    "../../Zephyr/ConnectivityManagerImpl.cpp",
    "ConnectivityManagerImpl.h",
    "DeviceInstanceInfoProviderImpl.cpp",
    "DeviceInstanceInfoProviderImpl.h",
    "../../Zephyr/DiagnosticDataProviderImpl.cpp",
    "../../Zephyr/DiagnosticDataProviderImplGetter.cpp",
    "DiagnosticDataProviderImpl.h",
    "InetPlatformConfig.h",
    "../../Zephyr/KeyValueStoreManagerImpl.cpp",
    "KeyValueStoreManagerImpl.h",
    "../../Zephyr/Logging.cpp",
    "../../Zephyr/PlatformManagerImpl.cpp",
    "PlatformManagerImpl.h",
    "SysHeapMalloc.h",
    "SystemPlatformConfig.h",
    "../../Zephyr/SystemTimeSupport.cpp",
    "../../Zephyr/ZephyrConfig.cpp",
    "ZephyrConfig.h",
  ]

  public_deps = [ "${chip_root}/src/platform:platform_base" ]
  deps = [ "${chip_root}/src/platform/logging:headers" ]

  if (chip_enable_openthread) {
    sources += [
      "../../OpenThread/OpenThreadUtils.cpp",
      "ThreadStackManagerImpl.cpp",
      "ThreadStackManagerImpl.h",
    ]

    if (chip_mdns == "platform") {
      sources += [
        "../../OpenThread/DnssdImpl.cpp",
        "../../OpenThread/OpenThreadDnssdImpl.cpp",
        "../../OpenThread/OpenThreadDnssdImpl.h",
      ]
      deps += [ "${chip_root}/src/lib/dnssd:platform_header" ]
    }
  }

  if (chip_malloc_sys_heap) {
    sources += [ "../../Zephyr/SysHeapMalloc.cpp" ]
  }

  cflags = [ "-Wconversion" ]
}
